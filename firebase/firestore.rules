rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function signedIn() {
      return request.auth != null;
    }

    function userRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isAdmin() {
      return signedIn() && userRole() == 'admin';
    }

    function isOwnerOfDoc() {
      return signedIn() && resource.data.ownerUid == request.auth.uid;
    }

    match /users/{uid} {
      allow read: if signedIn() && uid == request.auth.uid;
      allow write: if signedIn() && (uid == request.auth.uid || isAdmin());
    }

    match /estimates/{id} {
      allow create: if signedIn() && request.resource.data.ownerUid == request.auth.uid;
      allow read, update, delete: if signedIn() && (isOwnerOfDoc() || isAdmin());
    }

    match /projections/{id} {
      allow create: if signedIn() && request.resource.data.ownerUid == request.auth.uid;
      allow read, update, delete: if signedIn() && (isOwnerOfDoc() || isAdmin());
    }

    match /config/{docId} {
      // Allow public read for toolkit configuration
      allow read: if true;
      allow write: if isAdmin();
    }

    match /resources/{resourceId} {
      // Allow public read for static resources referenced by tools
      allow read: if true;
      allow write: if isAdmin();
    }

    match /roomTemplates/{templateId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /items/{itemId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
